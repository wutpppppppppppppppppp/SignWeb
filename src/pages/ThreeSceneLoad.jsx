/* eslint-disable react/no-unknown-property */
// ThreeScene.jsx
import React, { useEffect, useRef } from "react"
import { Canvas } from "@react-three/fiber"
import { OrbitControls } from "@react-three/drei"
import { Environment } from "@react-three/drei"
import { updateBoneData } from "../libs/updateBoneDataLoad"
import Model from "../models/rokoko_straight/Untitled" // This is the component generated by gltfjsx

const ThreeSceneLoad = () => {
  const modelRef = useRef(null)
  const wsRef = useRef(null)

  useEffect(() => {
    // WebSocket connection setup
    wsRef.current = new WebSocket("ws://localhost:8080")
    wsRef.current.onmessage = (event) => {
      event.data
        .text()
        .then((text) => {
          try {
            let jsonData = JSON.parse(text)
            if (modelRef.current) {
              updateBoneData(jsonData, modelRef.current)
            } else {
              console.error("Model not loaded yet.")
            }
          } catch (error) {
            console.error("Error parsing JSON from Blob:", error)
          }
        })
        .catch((err) => {
          console.error("Error reading Blob as text:", err)
        })
    }

    return () => {
      if (wsRef.current) {
        wsRef.current.close()
      }
    }
  }, [])

  return (
    <Canvas camera={{ position: [0, 1, 3], fov: 75 }}>
      <ambientLight intensity={1} />
      <directionalLight position={[5, 10, 7.5]} intensity={10} />
      <OrbitControls enableDamping />
      <Model ref={modelRef} />
      <Environment preset="sunset" background />
    </Canvas>
  )
}

export default ThreeSceneLoad
